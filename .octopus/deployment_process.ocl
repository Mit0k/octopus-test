step "deploy-dev" {
    condition = "Always"
    name = "Deploy Dev"
    properties = {
        Octopus.Action.TargetRoles = "dev"
    }

    action {
        action_type = "Octopus.HelmChartUpgrade"
        environments = ["development"]
        is_required = true
        properties = {
            Octopus.Action.Helm.AdditionalArgs = "--install --create-namespace --namespace octopus-dev"
            Octopus.Action.Helm.ClientVersion = "V3"
            Octopus.Action.Helm.CustomHelmExecutable = "windows-amd64\\helm.exe"
            Octopus.Action.Helm.KeyValues = "{}"
            Octopus.Action.Helm.Namespace = "octopus-dev"
            Octopus.Action.Helm.ReleaseName = "dev"
            Octopus.Action.Helm.ResetValues = "True"
            Octopus.Action.Helm.Timeout = "300"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "helm-cloudsmith"
            Octopus.Action.Package.PackageId = "webapp-color"
            Octopus.Action.RunOnServer = "true"
        }
        worker_pool = "default-worker-pool-1"

        packages {
            acquisition_location = "Server"
            feed = "helm-cloudsmith"
            package_id = "webapp-color"
            properties = {
                SelectionMode = "immediate"
                ValuesFilePath = "values/dev_values.yaml"
            }
        }

        packages "HelmExe" {
            acquisition_location = "ExecutionTarget"
            feed = "octopus-server-built-in"
            package_id = "helm-v3"
            properties = {
                Extract = "True"
                PerformVariableReplace = "False"
            }
        }
    }
}

step "approve-to-uat" {
    name = "[UAT] Manual Intervention Required"

    action {
        action_type = "Octopus.Manual"
        environments = ["staging"]
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "True"
            Octopus.Action.Manual.Instructions = "Approve this release to deploy to next stage"
            Octopus.Action.Manual.ResponsibleTeamIds = "global/everyone"
        }
    }
}

step "deploy-uat" {
    name = "Deploy UAT"
    properties = {
        Octopus.Action.TargetRoles = "uat"
    }

    action {
        action_type = "Octopus.HelmChartUpgrade"
        environments = ["staging"]
        properties = {
            Octopus.Action.Helm.ClientVersion = "V3"
            Octopus.Action.Helm.CustomHelmExecutable = "windows-amd64\\helm.exe"
            Octopus.Action.Helm.Namespace = "octopus-uat"
            Octopus.Action.Helm.ReleaseName = "uat"
            Octopus.Action.Helm.ResetValues = "True"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "helm-cloudsmith"
            Octopus.Action.Package.PackageId = "webapp-color"
            Octopus.Action.RunOnServer = "true"
        }
        worker_pool = "default-worker-pool-1"

        packages {
            acquisition_location = "Server"
            feed = "helm-cloudsmith"
            package_id = "webapp-color"
            properties = {
                SelectionMode = "immediate"
                ValuesFilePath = "values/uat-values"
            }
        }

        packages "HelmExe" {
            acquisition_location = "ExecutionTarget"
            feed = "octopus-server-built-in"
            properties = {
                Extract = "True"
                PerformVariableReplace = "False"
            }
        }
    }
}

step "approve-to-prod" {
    name = "[PROD] Manual Intervention Required"

    action {
        action_type = "Octopus.Manual"
        environments = ["production"]
        properties = {
            Octopus.Action.Manual.BlockConcurrentDeployments = "True"
            Octopus.Action.Manual.Instructions = "Approve this release to deploy to next stage"
            Octopus.Action.Manual.ResponsibleTeamIds = "global/everyone"
        }
    }
}

step "deploy-prod" {
    condition = "Always"
    name = "Deploy prod"
    properties = {
        Octopus.Action.TargetRoles = "prod"
    }

    action {
        action_type = "Octopus.HelmChartUpgrade"
        environments = ["production"]
        is_required = true
        properties = {
            Octopus.Action.Helm.AdditionalArgs = "--install --create-namespace --namespace octopus-prod"
            Octopus.Action.Helm.ClientVersion = "V3"
            Octopus.Action.Helm.CustomHelmExecutable = "windows-amd64\\helm.exe"
            Octopus.Action.Helm.KeyValues = "{}"
            Octopus.Action.Helm.Namespace = "octopus-prod"
            Octopus.Action.Helm.ReleaseName = "prod"
            Octopus.Action.Helm.ResetValues = "True"
            Octopus.Action.Helm.Timeout = "10m"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "helm-cloudsmith"
            Octopus.Action.Package.PackageId = "webapp-color"
            Octopus.Action.RunOnServer = "true"
        }
        worker_pool = "default-worker-pool-1"

        packages {
            acquisition_location = "Server"
            feed = "helm-cloudsmith"
            package_id = "webapp-color"
            properties = {
                SelectionMode = "immediate"
                ValuesFilePath = "values/prod_values.yaml"
            }
        }

        packages "HelmExe" {
            acquisition_location = "ExecutionTarget"
            feed = "octopus-server-built-in"
            properties = {
                Extract = "True"
                PerformVariableReplace = "False"
            }
        }
    }
}